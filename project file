// libraries
#include <stdio.h>
#include <stdbool.h>
#include <string.h>
// constants
#define MAX_BOOKS 50
#define MAX_MEMBERS 30
#define MAX_BORROW 150
// counts
int countBooks = 0;
int countMembers = 0;
int countBorrowed = 0;
int countdate = 0;
// return values when inout is completed
int booksCompleted;
int membersCompleted;
int borrowedCompleted;
// lists of input
// 1.books
int booksList_ID_List[MAX_BOOKS];
int booksList_Copies_List[MAX_BOOKS];
// 2.member
int Members_ID_List[MAX_MEMBERS];
// 3.borrowed
int borrowed[MAX_BORROW][2];
int date[MAX_BORROW][3];
// declaration
// 1.input
int inputBooks();
int inputMembers();
int inputBorrowed();

// main
int main()
{

  // input
  char section[50];
  char cmd[50];
  // input
  while (scanf("%s", section) != EOF)
  {
    if ((inputBooks() + inputMembers() + inputBorrowed()) == 12)
      break;
    if (strcmp(section, "Books:") == 0)
    {
      inputBooks();
    }
    else if (strcmp(section, "Members:") == 0)
    {
      inputMembers();
    }
    else if (strcmp(section, "Borrowed_Books:") == 0)
    {

      inputBorrowed();
    }
    else
      printf("this section does not exist\n");
  }
  // commands
 
}

// books
int inputBooks()
{

  int books_ID;
  int books_Copies;

  while (true)
  {

    if (scanf("%d %d", &books_ID, &books_Copies) != 2 || countBooks == MAX_BOOKS)
    {
      booksCompleted = 4;
      break;
    }

    booksList_ID_List[countBooks] = books_ID;
    booksList_Copies_List[countBooks] = books_Copies;
    countBooks++;
  }
  return booksCompleted;
}

// members

int inputMembers()
{

  int member_ID;

  while (true)
  {

    if (scanf("%d", &member_ID) != 1 || countMembers == MAX_MEMBERS)
    {
      membersCompleted = 4;
      break;
    }

    Members_ID_List[countMembers] = member_ID;
    countMembers++;
  }
  return membersCompleted;
}
// borrowed
int inputBorrowed()
{

  int column1 = 0;
  int column2 = 0;
  int booksBorrowed, membersBorrowed;
  int days, months, year;

  while (true)
  {

    if (scanf("%d %d %d/%d/%d", &booksBorrowed, &membersBorrowed, &days, &months, &year) != 5 || countBorrowed == MAX_BORROW)
    {
      borrowedCompleted = 4;
      break;
    }
    borrowed[countBorrowed][0] = booksBorrowed;
    borrowed[countBorrowed][1] = membersBorrowed;
    date[countdate][0] = days;
    date[countdate][1] = months;
    date[countdate][2] = year;
    for (int i = 0; i < countBooks; i++)
    {
      if (borrowed[countMembers][0] == booksList_ID_List[i])
        if (booksList_Copies_List[i] > 0)
        {
          booksList_Copies_List[i] = booksList_Copies_List[i] - 1;
        }
        else if (booksList_Copies_List[i] == 0)
        {
          printf("There are no copies for this book");
        }
    }
    countBorrowed++;
    countdate++;
  }
  return borrowedCompleted;
}
